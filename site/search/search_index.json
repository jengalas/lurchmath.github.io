{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Lurch Project Lurch is a word processor designed to check the reasoning in proofs, specifically the types of proofs that students do in an introduction to proofs course. Its purpose is to give immediate and helpful feedback about whether a student is doing their proof correctly, so that the student learns the mechanics and rules of proof writing more quickly and thoroughly than if they had to wait days for manually graded feedback. Current status The latest version of Lurch is a web application that is in alpha testing at the moment. You can try it online here! Documentation We are just beginning to write documentation, but you can find it online here . New bug fixes, new features, and new documentation arrive almost every day. Expect a more stable release in late spring of 2024. Potential new contributors can check out the new app's GitHub repository here . Other tools The Lurch Deductive Engine (LDE) is the set of data structures and algorithms used under the hood to validate proofs We may later incorporate this JavaScript implementation of the Earley parsing algorithm to allow users to customize the notation used in the app, but that remains uncertain. Old versions of our work are archived here .","title":"Home"},{"location":"#the-lurch-project","text":"Lurch is a word processor designed to check the reasoning in proofs, specifically the types of proofs that students do in an introduction to proofs course. Its purpose is to give immediate and helpful feedback about whether a student is doing their proof correctly, so that the student learns the mechanics and rules of proof writing more quickly and thoroughly than if they had to wait days for manually graded feedback.","title":"The Lurch Project"},{"location":"#current-status","text":"The latest version of Lurch is a web application that is in alpha testing at the moment. You can try it online here!","title":"Current status"},{"location":"#documentation","text":"We are just beginning to write documentation, but you can find it online here . New bug fixes, new features, and new documentation arrive almost every day. Expect a more stable release in late spring of 2024. Potential new contributors can check out the new app's GitHub repository here .","title":"Documentation"},{"location":"#other-tools","text":"The Lurch Deductive Engine (LDE) is the set of data structures and algorithms used under the hood to validate proofs We may later incorporate this JavaScript implementation of the Earley parsing algorithm to allow users to customize the notation used in the app, but that remains uncertain. Old versions of our work are archived here .","title":"Other tools"},{"location":"about/","text":"About Lurch See the main page for a description of the software's purpose. Authors The Lurch project was created and has been principally designed and developed by Nathan Carter and Ken Monks , beginning informally in 1999 and continuing to the present. Major time was invested between 2008--2012 while supported by NSF DUE CCLI grant #0736644, and from 2018--present as part of a major update. Contributors The following students have also contributed work at various times over the years (and are now no longer students!). Jenna Bergevin Derek Breen Paul Christiano Ryan Colwell Timothy Delaney George Tillisch Jeffrey Wright","title":"About"},{"location":"about/#about-lurch","text":"See the main page for a description of the software's purpose.","title":"About Lurch"},{"location":"about/#authors","text":"The Lurch project was created and has been principally designed and developed by Nathan Carter and Ken Monks , beginning informally in 1999 and continuing to the present. Major time was invested between 2008--2012 while supported by NSF DUE CCLI grant #0736644, and from 2018--present as part of a major update.","title":"Authors"},{"location":"about/#contributors","text":"The following students have also contributed work at various times over the years (and are now no longer students!). Jenna Bergevin Derek Breen Paul Christiano Ryan Colwell Timothy Delaney George Tillisch Jeffrey Wright","title":"Contributors"},{"location":"documentation/","text":"Lurch Documentation This documentation is for the Lurch application that is online here . This documentation is not at all complete yet! It is just beginning! In fact, at this point, there is almost nothing here! We are actively developing Lurch daily during Spring 2024, and if you check back often, you will find new documentation arriving regularly. Example of Lurch checking reasoning Below you can see a live copy of the Lurch application embedded in this documentation page. It shows a trivial example of Lurch checking the work of the document author. A green check mark is applied to the second P , because it is a statement, and thus needs to be checked. Since it follows from the assumption on the previous line, the green check indicates that it is correct. The assumption does not get a check mark, since it was not a step of reasoning, but just an assumption. What if we `assume P`? The simplest conclusion we can draw from that is just `P` itself.","title":"Lurch Documentation"},{"location":"documentation/#lurch-documentation","text":"This documentation is for the Lurch application that is online here . This documentation is not at all complete yet! It is just beginning! In fact, at this point, there is almost nothing here! We are actively developing Lurch daily during Spring 2024, and if you check back often, you will find new documentation arriving regularly.","title":"Lurch Documentation"},{"location":"documentation/#example-of-lurch-checking-reasoning","text":"Below you can see a live copy of the Lurch application embedded in this documentation page. It shows a trivial example of Lurch checking the work of the document author. A green check mark is applied to the second P , because it is a statement, and thus needs to be checked. Since it follows from the assumption on the previous line, the green check indicates that it is correct. The assumption does not get a check mark, since it was not a step of reasoning, but just an assumption. What if we `assume P`? The simplest conclusion we can draw from that is just `P` itself.","title":"Example of Lurch checking reasoning"},{"location":"old-versions/","text":"Old versions of Lurch Lurch was first conceived in about 1995, but work was only sporadic and informal for most of the time since then. From 2008--2012, an intense period of work was supported by NSF DUE CCLI grant #0736644, followed by a break for redesign, and then reinvigorated work from about 2019 onward, resulting in the latest version . This page is for historical purposes only, and lists old versions of the software no longer used or suppored. Again, we encourage users seeking the current version to visit our main page . They are listed in chronological order. Desktop application, 2008--2014 Work on this project was supported by NSF DUE CCLI grant #0736644 from 2008-2012, resulting in a desktop application for Windows, Mac, and Linux systems. That desktop app has several drawbacks that motivated our work on the latest version , most notably very slow computation and a less than reliable user interface. Again, it's mentioned here for historical purposes only; we recommend using the newest version. Home page for Lurch desktop app from 2008--2014 Lurch Web Platform, c2017 Our first attempt to move our desktop application to the web resulted in a suite of tools for web-based word processing with semantic features embedded in the document and feedback graphics overlaid on top of the document. Subsequent improvements in web-based word processors (particularly TinyMCE) and our own decisions to streamline our design made it so that we did not end up using most of these tools in the long run. We mention them here for archival purposes only. First attempt at moving Lurch to the web , no longer actively developed or supported, including small example apps that use that web platform, documented here . A partial implementaton of the OpenMath standard in JavaScript cloud-storage - A JavaScript interface to cloud storage providers, used in our app for saving Lurch documents to Dropbox loadsave-plugin - A TinyMCE plugin providing a UI and other tools for loading and saving documents written in the editor","title":"Old versions of Lurch"},{"location":"old-versions/#old-versions-of-lurch","text":"Lurch was first conceived in about 1995, but work was only sporadic and informal for most of the time since then. From 2008--2012, an intense period of work was supported by NSF DUE CCLI grant #0736644, followed by a break for redesign, and then reinvigorated work from about 2019 onward, resulting in the latest version . This page is for historical purposes only, and lists old versions of the software no longer used or suppored. Again, we encourage users seeking the current version to visit our main page . They are listed in chronological order.","title":"Old versions of Lurch"},{"location":"old-versions/#desktop-application-2008-2014","text":"Work on this project was supported by NSF DUE CCLI grant #0736644 from 2008-2012, resulting in a desktop application for Windows, Mac, and Linux systems. That desktop app has several drawbacks that motivated our work on the latest version , most notably very slow computation and a less than reliable user interface. Again, it's mentioned here for historical purposes only; we recommend using the newest version. Home page for Lurch desktop app from 2008--2014","title":"Desktop application, 2008--2014"},{"location":"old-versions/#lurch-web-platform-c2017","text":"Our first attempt to move our desktop application to the web resulted in a suite of tools for web-based word processing with semantic features embedded in the document and feedback graphics overlaid on top of the document. Subsequent improvements in web-based word processors (particularly TinyMCE) and our own decisions to streamline our design made it so that we did not end up using most of these tools in the long run. We mention them here for archival purposes only. First attempt at moving Lurch to the web , no longer actively developed or supported, including small example apps that use that web platform, documented here . A partial implementaton of the OpenMath standard in JavaScript cloud-storage - A JavaScript interface to cloud storage providers, used in our app for saving Lurch documents to Dropbox loadsave-plugin - A TinyMCE plugin providing a UI and other tools for loading and saving documents written in the editor","title":"Lurch Web Platform, c2017"}]}